plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2' // https://plugins.gradle.org/plugin/io.qameta.allure
}

ext {
    allureVersion = '2.23.0'
}

allure {
    report { //секция репорта
        version.set("${allureVersion}") // https://github.com/allure-framework/allure2
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("${allureVersion}") //https://github.com/allure-framework/allure-java
            }
        }
    }

    //для запуска тестов через Gradle -> Tasks -> verification --> test
    useJUnit5 {
        version = "${allureVersion}"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:6.12.3",
            "org.junit.jupiter:junit-jupiter:5.8.2",
            "org.slf4j:slf4j-simple:2.0.6",
            "com.github.javafaker:javafaker:1.0.2",
            "com.codeborne:pdf-test:1.5.0",
            "com.codeborne:xls-test:1.4.3",
            "com.opencsv:opencsv:5.7.1",
            "com.fasterxml.jackson.core:jackson-core:2.13.1",
            "com.fasterxml.jackson.core:jackson-databind:2.13.1",
            "io.qameta.allure:allure-selenide:${allureVersion}" //https://mvnrepository.com/artifact/io.qameta.allure/allure-selenide
    )
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

task simple_test(type: Test) {
    useJUnitPlatform {
        includeTags("simple")
    }
}
